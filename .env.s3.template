# S3 Public Assets Configuration
# Copy these to your .env.local and fill in your environment-specific values

# S3 Configuration (AWS S3 + CloudFront CDN)
# Required for uploading practice images, user avatars, and other public assets
# If not configured, uploads will fall back to local filesystem (/public/uploads/)

# Development
S3_PUBLIC_REGION=us-east-1
S3_PUBLIC_ACCESS_KEY_ID=your-iam-access-key-id
S3_PUBLIC_SECRET_ACCESS_KEY=your-iam-secret-access-key
S3_PUBLIC_BUCKET=bcos-public-2c2af3de-6771-4cf3-90ff-330d402c1058
CDN_URL=https://cdn.bendcare.com

# Staging
# S3_PUBLIC_REGION=us-east-1
# S3_PUBLIC_ACCESS_KEY_ID=your-iam-access-key-id
# S3_PUBLIC_SECRET_ACCESS_KEY=your-iam-secret-access-key
# S3_PUBLIC_BUCKET=bcos-public-2c2af3de-6771-4cf3-90ff-330d402c1058
# CDN_URL=https://cdn.bendcare.com

# Production
# S3_PUBLIC_REGION=us-east-1
# S3_PUBLIC_ACCESS_KEY_ID=your-iam-access-key-id
# S3_PUBLIC_SECRET_ACCESS_KEY=your-iam-secret-access-key
# S3_PUBLIC_BUCKET=bcos-public-2c2af3de-6771-4cf3-90ff-330d402c1058
# CDN_URL=https://cdn.bendcare.com

# ============================================
# SETUP INSTRUCTIONS
# ============================================

# 1. IAM User Setup
#    - Create IAM user: bcos-s3-public-uploads
#    - Attach policy: bcos-s3-public-bucket-write (see docs/s3-iam-setup.md)
#    - Generate access keys
#    - Copy access key ID and secret access key to the variables above

# 2. Required IAM Permissions
#    The IAM user needs the following permissions on the S3 bucket:
#    - s3:PutObject (upload files)
#    - s3:DeleteObject (delete files)
#    - s3:GetObject (read files for verification)
#    - s3:ListBucket (list bucket contents)

# 3. S3 Bucket Details
#    - Bucket name: bcos-public-2c2af3de-6771-4cf3-90ff-330d402c1058
#    - Region: us-east-1
#    - Access: Private (only accessible via CloudFront OAI)
#    - CloudFront distribution: cdn.bendcare.com

# 4. Security Notes
#    - DO NOT commit credentials to git
#    - Use separate IAM users for dev/staging/prod
#    - Rotate access keys every 90 days
#    - Use least-privilege IAM policies
#    - Monitor S3 access logs for suspicious activity

# 5. Testing
#    To verify S3 is configured correctly:
#    - Upload a test image via the UI
#    - Verify the file appears in S3 bucket
#    - Verify the CloudFront URL works
#    - Check application logs for S3 upload confirmation

# 6. Troubleshooting
#    - If uploads fail, check CloudWatch logs for error messages
#    - Verify IAM credentials are correct
#    - Verify bucket name and region match
#    - Verify CloudFront distribution is deployed
#    - Test S3 access with AWS CLI: aws s3 ls s3://bcos-public-2c2af3de-6771-4cf3-90ff-330d402c1058/

# 7. Fallback Behavior
#    If S3 is not configured (missing env vars), the upload service will:
#    - Automatically fall back to local filesystem storage
#    - Store files in /public/uploads/
#    - Return local URLs (/uploads/...) instead of CloudFront URLs
#    - Log a warning indicating fallback mode is active
